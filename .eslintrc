{
	"root": true,
	"env": {},
	"extends": [
		"airbnb",
		"airbnb-typescript",
		"airbnb/hooks",
		"plugin:prettier/recommended"
	],
	"parserOptions": {
		"project": "./tsconfig.json"
	},
	"plugins": ["prettier"],
	"ignorePatterns": ["build/", "dist/", "node_modules/"],
	"rules": {
		"react/jsx-key": 2,
		"arrow-body-style": 1,
		"import/no-duplicates": 1,
		"react/self-closing-comp": 1,
		"import/no-useless-path-segments": 1,
		"@typescript-eslint/naming-convention": "off",
		"react-hooks/exhaustive-deps": "warn",
		"react/react-in-jsx-scope": "off",
		"react/jsx-props-no-spreading": "off",
		"react/jsx-fragments": "off",
		"react/jsx-no-useless-fragment": "off",
		"react/require-default-props": "off",
		"react/prop-types": "off",
		"react/no-array-index-key": "off",
		"react/jsx-no-constructed-context-values": "off",
		"react/button-has-type": "off",
		"react/no-unstable-nested-components": "off",
		"react/function-component-definition": "off",
		"no-unsafe-optional-chaining": "off",
		"no-unused-vars": "off",
		"jsx-a11y/anchor-is-valid": "warn",
		"jsx-a11y/click-events-have-key-events": "off",
		"jsx-a11y/no-static-element-interactions": "off",
		"jsx-a11y/no-autofocus": "off",
		"jsx-a11y/control-has-associated-label": "off",
		"jsx-a11y/no-noninteractive-element-interactions": "off",
		"no-restricted-exports": "off",
		"no-restricted-imports": ["error"],
		"no-lonely-if": "off",
		"no-underscore-dangle": "off",
		"prefer-const": "off",
		"no-plusplus": "off",
		"no-multi-assign": "off",
		"default-case": "off",
		"consistent-return": "off",
		"no-param-reassign": "off",
		"prefer-destructuring": "off",
		"no-restricted-syntax": "off",
		"max-classes-per-file": "off",
		"guard-for-in": "off",
		"import/no-cycle": "off",
		"no-console": "warn",
		"import/no-anonymous-default-export": "off",
		"prettier/prettier": ["warn"],
		// Too restrictive, writing ugly code to defend against a very unlikely scenario: https://eslint.org/docs/rules/no-prototype-builtins
		"no-prototype-builtins": "off",
		// https://basarat.gitbooks.io/typescript/docs/tips/defaultIsBad.html
		"import/prefer-default-export": "off",
		// Too restrictive: https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/destructuring-assignment.md
		"react/destructuring-assignment": "off",
		// No jsx extension: https://github.com/facebook/create-react-app/issues/87#issuecomment-234627904
		"react/jsx-filename-extension": "off",
		// Use function hoisting to improve code readability
		"no-use-before-define": [
			"warn",
			{
				"functions": false,
				"classes": true,
				"variables": true
			}
		],
		"@typescript-eslint/no-shadow": "off",
		"@typescript-eslint/no-unused-vars": [
			"warn",
			{
				"ignoreRestSiblings": false
			}
		],
		// Allow most functions to rely on type inference. If the function is exported, then `@typescript-eslint/explicit-module-boundary-types` will ensure it's typed.
		"@typescript-eslint/explicit-function-return-type": "off",
		"@typescript-eslint/no-use-before-define": [
			"error",
			{
				"functions": false,
				"classes": true,
				"variables": false,
				"typedefs": true
			}
		],
		// It's not accurate in the monorepo style
		"import/no-extraneous-dependencies": "off"
	}
}
